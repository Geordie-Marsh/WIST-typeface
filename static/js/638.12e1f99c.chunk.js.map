{"version":3,"file":"static/js/638.12e1f99c.chunk.js","mappings":"wJAAO,SAASA,EAAKC,GAAyB,IAAxB,SAAEC,EAAQ,QAAEC,GAASF,EAC1C,OACCG,EAAAA,EAAAA,KAAA,UAAQC,UAAU,eAAeF,QAASA,EAAQD,UACjDE,EAAAA,EAAAA,KAAA,MAAAF,SAAMA,KAGT,CAEO,SAASI,EAAKC,GAAwC,IAAtC,SAAEL,EAAQ,KAAEM,GAAO,EAAK,QAAEL,GAASI,EACzD,OACCH,EAAAA,EAAAA,KAAA,UAAQC,UAAW,kBAA4B,IAATG,EAAgB,OAAS,IAAKL,QAASA,EAAQD,UACpFE,EAAAA,EAAAA,KAAA,KAAAF,SAAKA,KAGR,C,8FCHe,SAASO,IACvB,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,GAC7BC,EAAS,CACd,UACA,OACA,SACA,UAGD,SAASC,IACJJ,EAAQG,EAAOE,OAAS,GAC3BJ,EAASD,EAAQ,GAEH,IAAVA,GACHM,OAAOC,cACN,IAAIC,YAAa,kBAAoB,CACpCC,OAAQ,UAKG,IAAVT,GACHM,OAAOC,cACN,IAAIC,YAAa,kBAAoB,CACpCC,OAAQ,OAKG,IAAVT,GACHM,OAAOC,cACN,IAAIC,YAAa,kBAAoB,CACpCC,OAAQ,QAKXR,EAAS,EAGX,CAiBA,OANAS,EAAAA,EAAAA,YAAU,KARTJ,OAAOC,cACN,IAAIC,YAAa,kBAAoB,CACpCC,OAAQ,YAQI,GACZ,KAIFf,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kBAAiBH,UAC/BmB,EAAAA,EAAAA,MAAA,OAAKhB,UAAU,kCAAiCH,SAAA,CAEnC,IAAVQ,IACDW,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAApB,SAAA,EACCE,EAAAA,EAAAA,KAAA,MAAAF,SAAI,aACJE,EAAAA,EAAAA,KAAA,KAAAF,SAAG,mGAIO,IAAVQ,IACDW,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAApB,SAAA,EACCE,EAAAA,EAAAA,KAAA,MAAAF,SAAI,UACJE,EAAAA,EAAAA,KAAA,KAAAF,SAAG,qIAIO,IAAVQ,IACDW,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAApB,SAAA,EACCE,EAAAA,EAAAA,KAAA,MAAAF,SAAI,aACJE,EAAAA,EAAAA,KAAA,KAAAF,SAAG,uHAIO,IAAVQ,IACDW,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAApB,SAAA,EACCE,EAAAA,EAAAA,KAAA,MAAAF,SAAI,YACJE,EAAAA,EAAAA,KAAA,KAAAF,SAAG,sNAGLE,EAAAA,EAAAA,KAACmB,EAAAA,EAAU,CAACC,KAAK,MAAMC,UAAW,MAClCrB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qCAAoCH,SAEtC,IAAVQ,GACDN,EAAAA,EAAAA,KAACsB,EAAAA,EAAY,CAACvB,QAAUW,EAAWZ,UAACE,EAAAA,EAAAA,KAAA,KAAAF,SAAG,YACvCmB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAApB,SAAA,EACCE,EAAAA,EAAAA,KAACsB,EAAAA,EAAY,CAACvB,QAAUW,EAAWZ,UAACE,EAAAA,EAAAA,KAAA,KAAAF,SAAG,eACvCE,EAAAA,EAAAA,KAACsB,EAAAA,EAAY,CAAAxB,UAACE,EAAAA,EAAAA,KAACuB,EAAAA,GAAI,CAACC,GAAG,gCAA+B1B,SAAC,uBAO9D,C","sources":["components/Button.jsx","pages/About.jsx"],"sourcesContent":["export function Major({ children, onClick }) {\r\n\treturn (\r\n\t\t<button className='Button Major' onClick={onClick}>\r\n\t\t\t<h2>{ children }</h2>\r\n\t\t</button>\r\n\t);\r\n}\r\n\r\nexport function Minor ({ children, dark = false, onClick }) {\r\n\treturn (\r\n\t\t<button className={'Button Minor ' + (dark === true ? \"dark\" : \"\")} onClick={onClick}>\r\n\t\t\t<p>{ children }</p>\r\n\t\t</button>\r\n\t);\r\n}","// Imports\r\n\t// Import React\r\n\timport { useEffect, useState } from \"react\";\r\n\timport { Link } from \"react-router-dom\";\r\n\r\n\t// Importing components\r\n\timport LetterGrid from \"../components/LetterGrid\";\r\n\timport * as Button from \"../components/Button\";\r\n\r\n\r\n\r\nexport default function About() {\r\n\tconst [slide, setSlide] = useState(0);\r\n\tconst slides = [\r\n\t\t\"modules\",\r\n\t\t\"grid\",\r\n\t\t\"letter\",\r\n\t\t\"change\",\r\n\t];\r\n\r\n\tfunction nextSlide() {\r\n\t\tif (slide < slides.length - 1) {\r\n\t\t\tsetSlide(slide + 1);\r\n\t\t\t\r\n\t\t\tif (slide === 0) {\r\n\t\t\t\twindow.dispatchEvent(\r\n\t\t\t\t\tnew CustomEvent((\"letterChangeset\"), {\r\n\t\t\t\t\t\tdetail: \"full\"\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (slide === 1) {\r\n\t\t\t\twindow.dispatchEvent(\r\n\t\t\t\t\tnew CustomEvent((\"letterChangeset\"), {\r\n\t\t\t\t\t\tdetail: \"p\"\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tif (slide === 2) {\r\n\t\t\t\twindow.dispatchEvent(\r\n\t\t\t\t\tnew CustomEvent((\"letterChangeset\"), {\r\n\t\t\t\t\t\tdetail: \"k\"\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tsetSlide(0);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction slideModules() {\r\n\t\twindow.dispatchEvent(\r\n\t\t\tnew CustomEvent((\"letterChangeset\"), {\r\n\t\t\t\tdetail: \"modules\"\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\t// Initialising the first slide\r\n\t\tslideModules();\r\n\t}, []);\r\n\r\n\r\n\treturn (\r\n\t\t<div className=\"About mode-cont\">\r\n\t\t\t<div className=\"d-flex flex-v jc-c ai-c gap--md\">\r\n\t\t\t\t{\r\n\t\t\t\t\t(slide === 0) &&\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<h1>Modules</h1>\r\n\t\t\t\t\t\t<p>We start with 3 modules: a short straight line, a long diagonal line, and a quarter-circle.</p>\r\n\t\t\t\t\t</>\r\n\t\t\t\t}\r\n\t\t\t\t{\r\n\t\t\t\t\t(slide === 1) &&\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<h1>Grid</h1>\r\n\t\t\t\t\t\t<p>These modules are used to built this grid. By showing or hiding certain segments from this grid, we can make legible letters.</p>\r\n\t\t\t\t\t</>\r\n\t\t\t\t}\r\n\t\t\t\t{\r\n\t\t\t\t\t(slide === 2) &&\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<h1>Letters</h1>\r\n\t\t\t\t\t\t<p>Due to the nature of the grid, most letters can have many permutation, like a corner being pointed or rounded. </p>\r\n\t\t\t\t\t</>\r\n\t\t\t\t}\r\n\t\t\t\t{\r\n\t\t\t\t\t(slide === 3) &&\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<h1>Change</h1>\r\n\t\t\t\t\t\t<p>When changing to a new letter, the system will try to keep as many parts of the letter the same and only change what's necessary. This means the look of a given letter is dependent on what came before it. </p>\r\n\t\t\t\t\t</>\r\n\t\t\t\t}\r\n\t\t\t\t<LetterGrid mode=\"set\" reference={\"\"} />\r\n\t\t\t\t<div className=\"d-flex flex-h jc-bwtn ai-c gap--sm\">\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t(slide !== 3) ?\r\n\t\t\t\t\t\t<Button.Minor onClick={ nextSlide }><p>Next</p></Button.Minor> :\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<Button.Minor onClick={ nextSlide }><p>Restart</p></Button.Minor>\r\n\t\t\t\t\t\t\t<Button.Minor><Link to=\"/playground/individual-letter\">Explore</Link></Button.Minor>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}"],"names":["Major","_ref","children","onClick","_jsx","className","Minor","_ref2","dark","About","slide","setSlide","useState","slides","nextSlide","length","window","dispatchEvent","CustomEvent","detail","useEffect","_jsxs","_Fragment","LetterGrid","mode","reference","Button","Link","to"],"sourceRoot":""}