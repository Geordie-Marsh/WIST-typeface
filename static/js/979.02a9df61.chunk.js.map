{"version":3,"file":"static/js/979.02a9df61.chunk.js","mappings":"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","sources":["components/Button.jsx","components/Radio.jsx","pages/modes/IndividualLetter.jsx"],"sourcesContent":["export function Major({ children, onClick }) {\r\n\treturn (\r\n\t\t<button className='Button Major' onClick={onClick}>\r\n\t\t\t<h2>{ children }</h2>\r\n\t\t</button>\r\n\t);\r\n}\r\n\r\nexport function Minor ({ children, dark = false, onClick }) {\r\n\treturn (\r\n\t\t<button className={'Button Minor ' + (dark === true ? \"dark\" : \"\")} onClick={onClick}>\r\n\t\t\t<p>{ children }</p>\r\n\t\t</button>\r\n\t);\r\n}","// Imports\r\n\t// Importing React\r\n\timport React, { useState } from 'react';\r\n\r\n\r\n\r\nexport default function Radio({ options, selectedValue, onChange }) {\r\n\tconst [hoveredOption, setHoveredOption] = useState(null);\r\n\r\n\tconst handleOptionClick = (name) => {\r\n\t\tif (onChange) {\r\n\t\t\tonChange(name);\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleMouseEnter = (name) => {\r\n\t\tsetHoveredOption(name);\r\n\t}\r\n\r\n\tconst handleMouseLeave = () => {\r\n\t\tsetHoveredOption(null);\r\n\t}\r\n\t\r\n\r\n\r\n\treturn (\r\n\t\t<div className='Radio d-flex jc-btwn gap--xs'>\r\n\t\t\t{ options.map(option => (\r\n\t\t\t\t<div\r\n\t\t\t\t\tkey={option.name}\r\n\t\t\t\t\tclassName={`Radio__option ${selectedValue === option.name ? 'selected' : ''} ${hoveredOption === option.name ? 'hovered ' + option.name : ''}`}\r\n\t\t\t\t\tonClick={() => handleOptionClick(option.name)}\r\n\t\t\t\t\tonMouseEnter={ () => handleMouseEnter(option.name) }\r\n\t\t\t\t\tonMouseLeave={ handleMouseLeave }\r\n\t\t\t\t>\r\n\t\t\t\t\t<p >{ option.label }</p>\r\n\t\t\t\t</div>\r\n\t\t\t)) }\r\n\t\t</div>\r\n\t);\r\n}","// Imports\r\n\t// Importing React\r\n\timport { useEffect, useState, useRef } from 'react';\r\n\timport { useLocation } from \"react-router-dom\";\r\n\r\n\t// Importing gsap\r\n\timport { gsap } from 'gsap';\r\n\r\n\t// Importing components\r\n\timport LetterGrid from '../../components/LetterGrid.jsx';\r\n\timport Radio from '../../components/Radio.jsx';\r\n\timport * as Button from '../../components/Button.jsx';\r\n\r\n\t// Importing defs\r\n\timport { $$ } from '../../defs.js';\r\n\r\n\t// Importing constants\r\n\timport { TRANSITION_DURATION } from '../../constants.js';\r\n\r\n\r\n\r\nexport default function IndividualLetter() {\r\n\tconst location = useLocation();\r\n\r\n\t// Radio functionality\r\n\t// Colour radio\r\n\tconst [radioColour, setRadioColour] = useState(\"rainbow\"); // Default value\r\n\tconst colourOptions = [ // Options\r\n\t\t{ name: \"black\", label: \"Black\" },\r\n\t\t{ name: \"rainbow\", label: \"Rainbow\" },\r\n\t\t{ name: \"morning\", label: \"Morning\" },\r\n\t\t{ name: \"daylight\", label: \"Daylight\" },\r\n\t\t{ name: \"sunset\", label: \"Sunset\" },\r\n\t\t{ name: \"twilight\", label: \"Twilight\" },\r\n\t];\r\n\tconst handleColourChange = (name) => {\r\n\t\tsetRadioColour(name);\r\n\t};\r\n\r\n\t// The items\r\n\tconst [items, setItems] = useState(null);\r\n\r\n\tconst initialised = useRef(false);\r\n\r\n\r\n\r\n\t// Function to initialise the mode\r\n\tfunction init() {\r\n\t\t// Pushing the history state\r\n\t\twindow.history.pushState({}, \"\", \"#\" + location.pathname);\r\n\r\n\t\tgsap.to(\".options-cont\", {\r\n\t\t\topacity: 0,\r\n\t\t\tduration: TRANSITION_DURATION,\r\n\t\t\tonComplete: () => {\r\n\t\t\t\t$$(\".options-cont\").style.display = \"none\";\r\n\r\n\t\t\t\tinitialised.current = true;\r\n\r\n\t\t\t\t// Broadcasting that the settings are now active\r\n\t\t\t\twindow.dispatchEvent(new CustomEvent('settingsInactive'));\r\n\r\n\t\t\t\tsetItems(\r\n\t\t\t\t\t<div className='letter'>\r\n\t\t\t\t\t\t<LetterGrid colour={ radioColour } allowedToStart={ initialised.current } />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tfunction initSettings() {\r\n\t\t// Setting the word snake initialised flag\r\n\t\tinitialised.current = false;\r\n\r\n\t\t// Broadcasting that the settings are now active\r\n\t\twindow.dispatchEvent(new CustomEvent('settingsActive'));\r\n\r\n\t\t// Hiding the items\r\n\t\tgsap.to(\".letter\", {\r\n\t\t\topacity: 0,\r\n\t\t\tduration: TRANSITION_DURATION,\r\n\t\t\tonComplete: () => {\r\n\t\t\t\tsetItems(null);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Showing the options\r\n\t\t$$(\".options-cont\").style.display = \"flex\";\r\n\t\tgsap.to(\".options-cont\", {\r\n\t\t\topacity: 1,\r\n\t\t\tdelay: TRANSITION_DURATION * 1.5,\r\n\t\t\tduration: TRANSITION_DURATION\r\n\t\t});\r\n\t}\r\n\r\n\r\n\r\n\tfunction handlePopstate() {\r\n\t\tif (initialised.current) {\r\n\t\t\t// Reloading the page\r\n\t\t\t// window.location.reload();\r\n\t\t\tinitSettings();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\t// Adding the event lister for the popstate event\r\n\t\twindow.addEventListener(\"popstate\", handlePopstate);\r\n\r\n\t\t// Adding the event listener for the settingsClicked event\r\n\t\twindow.addEventListener(\"settingsClicked--individual-letter\", initSettings);\r\n\r\n\t\t// Cleanup\r\n\t\treturn () => {\r\n\t\t\t// Removing the event listeners\r\n\t\t\twindow.removeEventListener(\"popstate\", handlePopstate);\r\n\r\n\t\t\t// Removing the event listener for the settingsClicked event\r\n\t\t\twindow.removeEventListener(\"settingsClicked--individual-letter\", initSettings);\r\n\t\t};\r\n\t}, []);\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<div className='IndividualLetter mode-cont'>\r\n\t\t\t{ items }\r\n\r\n\t\t\t<div className='options-cont d-flex flex-v ai-c gap--md'>\r\n\t\t\t\t<h1>Individual letter options</h1>\r\n\r\n\t\t\t\t<div className='d-flex flex-v ai-c gap--sm'>\r\n\t\t\t\t\t<h2>Colour</h2>\r\n\t\t\t\t\t<Radio\r\n\t\t\t\t\t\toptions={ colourOptions }\r\n\t\t\t\t\t\tselectedValue={ radioColour }\r\n\t\t\t\t\t\tonChange={ handleColourChange }\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<Button.Major onClick={init}>Start!</Button.Major>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}"],"names":["Major","_ref","children","onClick","_jsx","className","Minor","_ref2","dark","Radio","options","selectedValue","onChange","hoveredOption","setHoveredOption","useState","handleMouseLeave","map","option","name","handleOptionClick","onMouseEnter","handleMouseEnter","onMouseLeave","label","IndividualLetter","location","useLocation","radioColour","setRadioColour","items","setItems","initialised","useRef","initSettings","current","window","dispatchEvent","CustomEvent","gsap","to","opacity","duration","TRANSITION_DURATION","onComplete","$$","style","display","delay","handlePopstate","useEffect","addEventListener","removeEventListener","_jsxs","Button","history","pushState","pathname","LetterGrid","colour","allowedToStart"],"sourceRoot":""}